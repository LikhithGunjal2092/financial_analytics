{
	"name": "source_to_staging",
	"properties": {
		"activities": [
			{
				"name": "LookupControlTable",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "source_control_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupControlTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupControlTable').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "LookupCurrentWatermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('select max(date) as watermark from ',item().table_name)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "source_control_table",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "LookupLastWatermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select watermark from datafactory.control_table \nwhere table_name= @{concat('''',item().table_name,'''')}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "source_control_table",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "CopySourceToStaging",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "LookupCurrentWatermark",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "LookupLastWatermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().table_name} where date >'@{activity('LookupLastWatermark').output.firstRow.watermark}' and date <= '@{activity('LookupCurrentWatermark').output.firstRow.watermark}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "source_control_table",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Parquet1",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@item().table_name",
											"type": "Expression"
										},
										"file_name": {
											"value": "@concat(item().table_name,string(formatDateTime(convertFromUtc(utcNow(),'India Standard Time'),'yyyyMMdd')))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "CopyStagingToWarehouse",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "CopySourceToStaging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "source_db_financial_analytics",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "@concat('delete from ',item().table_name, ' using ( select * from @my_azure_stage/',item().table_name,'/',item().table_name,string(formatDateTime(convertFromUtc(utcNow(),'Indian Standard Time'),'yyyyMMdd')),') as cte where cte.',item().joinkey,' = ',item().joinkey,';','insert into ',item().table_name,' select * from @my_azure_stage/',item().table_name,'/',item().table_name,string(formatDateTime(convertFromUtc(utcNow(),'Indian Standard Time'),'yyyyMMdd'))\n)",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}