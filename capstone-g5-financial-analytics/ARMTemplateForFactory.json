{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "capstone-g5-financial-analytics"
		},
		"azure_staging_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'azure_staging'"
		},
		"snowflake_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'snowflake_ls'"
		},
		"source_db_financial_analytics_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'source_db_financial_analytics'"
		},
		"source_financial_analytics_db_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'source_financial_analytics_db'"
		},
		"azure_staging_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://faiitjgroup5.dfs.core.windows.net/"
		},
		"source_db_financial_analytics_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "capstone-financial-analytics-db.cxeikoyuwfyj.us-east-1.rds.amazonaws.com"
		},
		"source_db_financial_analytics_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "financial_analytics"
		},
		"source_db_financial_analytics_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"source_financial_analytics_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "capstone-financial-analytics-db.cxeikoyuwfyj.us-east-1.rds.amazonaws.com"
		},
		"source_financial_analytics_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "financial_analytics"
		},
		"source_financial_analytics_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/source_to_warehouse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupControlTable",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "source_control_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupControlTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupControlTable').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LookupCurrentWatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('select max(date) as watermark from ',item().table_name)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "source_control_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LookupLastWatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select watermark from datafactory.control_table \nwhere table_name= @{concat('''',item().table_name,'''')}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "source_control_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "CopySourceToStaging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupCurrentWatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LookupLastWatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().table_name} where date >'@{activity('LookupLastWatermark').output.firstRow.watermark}' and date <= '@{activity('LookupCurrentWatermark').output.firstRow.watermark}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_control_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet1",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"file_name": {
													"value": "@concat(item().table_name,string(formatDateTime(convertFromUtc(utcNow(),'India Standard Time'),'yyyyMMdd')))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "CopyStagingToWarehouse",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "CopySourceToStaging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "source_db_financial_analytics",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat('delete from ',item().table_name, ' using ( select * from @my_azure_stage/',item().table_name,'/',item().table_name,string(formatDateTime(convertFromUtc(utcNow(),'Indian Standard Time'),'yyyyMMdd')),') as cte where cte.',item().joinkey,' = ',item().joinkey,';','insert into ',item().table_name,' select * from @my_azure_stage/',item().table_name,'/',item().table_name,string(formatDateTime(convertFromUtc(utcNow(),'Indian Standard Time'),'yyyyMMdd'))\n)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_control_table')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/linkedServices/source_db_financial_analytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azure_staging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().table_name",
							"type": "Expression"
						},
						"fileSystem": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azure_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "snowflake_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/snowflake_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_control_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_db_financial_analytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "table_name",
						"type": "varchar"
					},
					{
						"name": "join_key",
						"type": "varchar"
					},
					{
						"name": "watermark",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "datafactory",
					"table": "control_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_db_financial_analytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azure_staging_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('azure_staging_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/snowflake_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"authenticationType": "Basic",
					"connectionString": "[parameters('snowflake_ls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_db_financial_analytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('source_db_financial_analytics_properties_typeProperties_server')]",
					"database": "[parameters('source_db_financial_analytics_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('source_db_financial_analytics_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('source_db_financial_analytics_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_financial_analytics_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('source_financial_analytics_db_properties_typeProperties_server')]",
					"database": "[parameters('source_financial_analytics_db_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('source_financial_analytics_db_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('source_financial_analytics_db_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}